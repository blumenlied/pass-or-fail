# --- General ---
.DS_Store
*.tmp
*.bak
*.swp
*~
*.patch
*.log
*.cache
*.orig

# --- Python ---
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually pyinstaller products are distributed by PyInstaller's tools
# rather than directly committed to Git:
# *.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDEs and editors
.idea/
.vscode/
*.suo
*.ntvs*
*.njsproj
*.sln
*.sublime-workspace
*.sublime-project

# Jupyter Notebook
.ipynb_checkpoints

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# --- Node.js / SvelteKit ---
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.*
!.env.example # Make sure .env.example IS tracked

# SvelteKit specific
.svelte-kit/
build/ # If you have a top-level build directory for frontend

# Vite specific
.vite/
dist/ # If your frontend output is named 'dist' and is at the root or in frontend/

# --- SQLite (if you use it for local dev and don't want to commit the db file) ---
*.sqlite3
*.db
*.db-journal # Or specific names like dev.db, test.db

# --- ML Model Files (if large and not meant to be in repo) ---
# *.joblib
# *.pkl
# *.h5
# (Consider Git LFS for large model files if you *must* track them)

# --- Frontend specific build output (if not covered by .svelte-kit or build/) ---
# Assuming your frontend is in a 'frontend' subdirectory
frontend/dist/
frontend/.vite/
frontend/.svelte-kit/
frontend/build/
# No need to repeat node_modules for frontend if it's covered by the global node_modules/

# --- Backend specific (if any, beyond standard Python) ---
# Example: alembic/versions/ (if you don't commit generated migration scripts, though often they are)
